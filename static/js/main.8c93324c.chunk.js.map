{"version":3,"sources":["ErrorHandling/ErrorBoundary.js","polyfill.js","App.js","serviceWorker.js","reducers/statusReducer.js","reducers/configReducer.js","reducers/explorerReducer.js","utils/classes/Stack.js","utils/classes/BackStack.js","reducers/explorerStateReducer.js","reducers/providerStatusReducer.js","reducers/userActionsReducer.js","reducers/imagesReducer.js","reducers/versionReducer.js","reducers/index.js","utils/StateLoader.js","throttled.js","store.js","index.js","actions/types.js","utils/Constants.js","utils/API/endpoint.js","utils/API/API.js","utils/Tools.js"],"names":["ErrorBoundary","props","state","hasError","error","info","this","setState","console","log","className","fluid","lg","sm","href","children","React","Component","window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","prototype","Event","DefaultLayout","lazy","Login","Register","Page404","Page500","App","data-test","Suspense","fallback","exact","path","name","render","Boolean","location","hostname","match","initialState","isConnected","jobs","speed","runningAvgSpeed","checkStatus","bandwidth","providers","configDump","configs","remotes","files","numContainers","containers","activeRemoteContainerID","distractionFreeMode","numCols","Stack","items","count","remoteName","remotePath","item","push","pop","slice","getLength","BackStack","backStack","forwardStack","empty","peek","temp","moveBack","backStacks","currentPaths","visibilityFilters","gridMode","searchQueries","loadImages","sortFilters","sortFiltersAscending","about","auth","authKey","ipAddress","interceptor","arch","decomposed","goVersion","isGit","os","version","appReducer","combineReducers","status","action","type","FETCH_STATUS","REQUEST_SUCCESS","curSpeed","payload","cma","totalElements","length","elapsedTime","speedAvg","REQUEST_ERROR","ENABLE_STATUS_CHECK","SET_BANDWIDTH","GET_BANDWIDTH","config","GET_PROVIDERS","GET_CONFIG_DUMP","remote","GET_CONFIG_FOR_REMOTE","GET_REMOTE_LIST","GET_FILES_LIST","time","Date","filesList","ADD_LAYOUT_CONTAINER","ID","containerID","paneID","REMOVE_LAYOUT_CONTAINER","filter","lastItem","CHANGE_ACTIVE_REMOTE_CONTAINER","CHANGE_LAYOUT_COLS","CHANGE_DISTRACTION_FREE_MODE","explorer","id","data","visibilityFilter","searchQuery","sortFilterAscending","sortFilter","CHANGE_PATH","CHANGE_REMOTE_NAME","indexOf","CHANGE_REMOTE_PATH","CREATE_PATH","REMOVE_PATH","NAVIGATE_UP","current","splitPath","split","i","NAVIGATE_FWD","moveForward","NAVIGATE_BACK","CHANGE_VISIBILITY_FILTER","CHANGE_GRID_MODE","mode","CHANGE_SEARCH_QUERY","CHANGE_LOAD_IMAGES","CHANGE_SORT_FILTER","providerStatus","GET_REMOTE_ABOUT","user","CHANGE_AUTH_KEY","CHANGE_IP_ADDRESS","localStorage","setItem","AUTH_KEY","IP_ADDRESS_KEY","CHANGE_AXIOS_INTERCEPTOR","axiosInstance","interceptors","request","eject","interceptorID","use","headers","Authorization","getItem","baseURL","Promise","reject","imageLoader","LOAD_IMAGE","url","save","isLoading","REQUEST_LOADING","GET_VERSION","rootReducer","SIGNOUT_REQUEST","clear","StateLoader","serializedState","initializeState","JSON","parse","err","newState","stringify","Error","throttled","middleware","thunk","getState","dispatch","next","meta","throttle","setTimeout","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","stateLoader","store","createStore","loadState","applyMiddleware","subscribe","saveState","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","visibilityFilteringOptions","STATUS_REFRESH_TIMEOUT","NEW_DRIVE_CONFIG_REFRESH_TIMEOUT","MODAL_ROOT_ELEMENT","USER_NAME_KEY","FILES_VIEW_HEIGHT","urls","mkdir","purge","deleteFile","createPublicLink","stats","bwlimit","moveDir","moveFile","copyDir","copyFile","cleanUpRemote","noopAuth","getRcloneVersion","getRcloneMemStats","getOptions","getProviders","getConfigDump","getRunningJobs","getStatusForJob","getConfigForRemote","createConfig","updateConfig","getFsInfo","listRemotes","getFilesList","getAbout","deleteConfig","stopJob","axios","create","responseType","performMoveFile","srcFs","srcRemote","dstFs","dstRemote","Name","IsDir","performCopyOrMoveFile","performCopyFile","a","isLocalRemoteName","_async","splitRes","post","isEmpty","obj","Array","isArray","key","hasOwnProperty","bytesToKB","bytes","bytesToGB","formatBytes","decimals","k","dm","sizes","Math","floor","parseFloat","pow","toFixed","secondsToStr","seconds","numberEnding","number","years","days","hours","minutes","baseValidator","regex","str","test","validateSizeSuffix","validateInt","validateDuration","validateDriveName","findFromConfig","find","ele","idx","array","Prefix","addColonAtLast","visibilityAssociation","Images","Pdf","changeListVisibility","list","checkList","acceptType","newList","MimeType","changeSearchFilter","toLowerCase","startsWith","groupByKey","xs","keyGetter","map","Map","forEach","collection","get","set","getSortCompareFunction","ascending","b","x","y","Size","ModTime","makeUniqueID","result","characters","charactersLength","charAt","random"],"mappings":"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","file":"static/js/main.8c93324c.chunk.js","sourcesContent":["import React from \"react\";\nimport {Col, Container, Row} from \"reactstrap\";\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {hasError: false};\n    }\n\n    static getDerivedStateFromError(error) {\n        // Update state so the next render will show the fallback UI.\n        return {hasError: true};\n    }\n\n    componentDidCatch(error, info) {\n        // You can also log the error to an error reporting service\n        // logErrorToMyService(error, info);\n        // Send error to Rclone backend.\n        this.setState({error, info});\n\n\n        console.log(\"Hey\");\n    }\n\n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return (\n                <div className=\"d-flex align-items-center\">\n                    <Container fluid={true}>\n                        <Row>\n                            <Col lg={3} sm={12}/>\n                            <Col lg={6} sm={12}>\n                                <h3>Something went wrong. </h3>\n                                <Row>\n                                    <Col>\n                                        Try refreshing the page.\n                                        If the issue persists, please consider opening a new issue on our Github page.\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col>\n                                        <a href=\"https://github.com/negative0/rclone-webui-react/issues\"\n                                           className=\"btn btn-primary\">\n                                            Create new Issue.\n                                        </a>\n                                    </Col>\n                                </Row>\n\n                            </Col>\n                            <Col lg={3} sm={12}/>\n                        </Row>\n                    </Container>\n                </div>\n            );\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","/*\n* required polyfills\n*/\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol'\n// import 'core-js/es6/object'\n// import 'core-js/es6/function'\n// import 'core-js/es6/parse-int'\n// import 'core-js/es6/parse-float'\n// import 'core-js/es6/number'\n// import 'core-js/es6/math'\n// import 'core-js/es6/string'\n// import 'core-js/es6/date'\nimport 'core-js/es/array'\n// import 'core-js/es6/regexp'\nimport 'core-js/es/map'\n// import 'core-js/es6/weak-map'\nimport 'core-js/es/set'\nimport 'core-js/es/object'\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect'\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\n// import 'core-js/es7/reflect'\n\n// CustomEvent() constructor functionality in IE9, IE10, IE11\n(function () {\n\n    if (typeof window.CustomEvent === \"function\") return false;\n\n    function CustomEvent(event, params) {\n        params = params || {bubbles: false, cancelable: false, detail: undefined};\n        var evt = document.createEvent('CustomEvent');\n        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n        return evt;\n    }\n\n    CustomEvent.prototype = window.Event.prototype;\n\n    window.CustomEvent = CustomEvent;\n})();\n","import React, {Component} from 'react';\nimport {HashRouter, Route, Switch} from 'react-router-dom';\n// import { renderRoutes } from 'react-router-config';\nimport './App.scss';\nimport {ToastContainer} from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport ErrorBoundary from \"./ErrorHandling/ErrorBoundary\";\n\nconst loading = () => <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>;\n\n// Containers\nconst DefaultLayout = React.lazy(() => import('./containers/DefaultLayout'));\n\n// Pages\nconst Login = React.lazy(() => import('./views/Pages/Login'));\nconst Register = React.lazy(() => import('./views/Pages/Register'));\nconst Page404 = React.lazy(() => import('./views/Pages/Page404'));\nconst Page500 = React.lazy(() => import('./views/Pages/Page500'));\n\nclass App extends Component {\n\n    render() {\n        return (\n            <div data-test=\"appComponent\">\n                <ErrorBoundary>\n                    <ToastContainer/>\n                    <HashRouter>\n                        <React.Suspense fallback={loading()}>\n                            <Switch>\n                                <Route exact path=\"/login\" name=\"Login Page\" render={props => <Login {...props}/>}/>\n                                <Route exact path=\"/register\" name=\"Register Page\"\n                                       render={props => <Register {...props}/>}/>\n                                <Route exact path=\"/404\" name=\"Page 404\" render={props => <Page404 {...props}/>}/>\n                                <Route exact path=\"/500\" name=\"Page 500\" render={props => <Page500 {...props}/>}/>\n                                <Route path=\"/\" name=\"Home\" render={props => <DefaultLayout {...props}/>}/>\n                            </Switch>\n                        </React.Suspense>\n                    </HashRouter>\n                </ErrorBoundary>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://goo.gl/SC7cgQ'\n                    );\n                });\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the old content will have been purged and\n                            // the fresh content will have been added to the cache.\n                            // It's the perfect time to display a \"New content is\n                            // available; please refresh.\" message in your web app.\n                            console.log('New content is available; please refresh.');\n\n                            // Execute callback\n                            if (config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get('content-type').indexOf('javascript') === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import {\n    ENABLE_STATUS_CHECK,\n    FETCH_STATUS,\n    GET_BANDWIDTH,\n    REQUEST_ERROR,\n    REQUEST_SUCCESS,\n    SET_BANDWIDTH\n} from \"../actions/types\";\n\nconst initialState = {\n    isConnected: false,\n    jobs: {},\n    speed: [],\n    runningAvgSpeed: 0,\n    checkStatus: true,\n    bandwidth: {}\n};\n/**\n * Specifies reducers for status check of the rclone backend.\n * @param state\n * @param action\n * @returns {({checkStatus, bandwidth, jobs, isConnected, runningAvgSpeed, speed}&{isConnected: boolean, error: *})|{checkStatus: boolean, bandwidth: {}, jobs: {}, isConnected: boolean, runningAvgSpeed: number, speed: Array}|({checkStatus, bandwidth, jobs, isConnected, runningAvgSpeed, speed}&{bandwidth: *})|({checkStatus, bandwidth, jobs, isConnected, runningAvgSpeed, speed}&{jobs: *, isConnected: boolean, runningAvgSpeed: number, speed: *[]})|({checkStatus, bandwidth, jobs, isConnected, runningAvgSpeed, speed}&{checkStatus: *})}\n */\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case FETCH_STATUS:\n\n            if (action.status === REQUEST_SUCCESS) {\n                const curSpeed = action.payload.speed;\n                let cma = state.runningAvgSpeed;\n                let totalElements = state.speed.length;\n                if (!totalElements) totalElements = 1;\n                let runningAvgSpeed = cma + ((curSpeed - cma) / 50);\n\n\n                return {\n                    ...state,\n                    jobs: action.payload,\n                    runningAvgSpeed,\n                    speed: [...state.speed, {\n                        elapsedTime: action.payload.elapsedTime,\n                        speed: action.payload.speed,\n                        speedAvg: runningAvgSpeed\n                    }],\n                    isConnected: true\n                };\n            }\n            if (action.status === REQUEST_ERROR) {\n                return {\n                    ...state,\n                    error: action.payload,\n                    isConnected: false\n                };\n            }\n            break;\n        case ENABLE_STATUS_CHECK:\n            return {\n                ...state,\n                checkStatus: action.payload\n            };\n        case SET_BANDWIDTH:\n        case GET_BANDWIDTH:\n            return {\n                ...state,\n                bandwidth: action.payload\n            };\n        default:\n            return state;\n    }\n}","import {GET_CONFIG_DUMP, GET_PROVIDERS, REQUEST_ERROR, REQUEST_SUCCESS} from \"../actions/types\";\n\nconst initialState = {\n    providers: [],\n    configDump: {},\n    hasError: false,\n};\n/**\n * Specifies redux reduce operations for the config module.\n * @param state {$ObjMap}\n * @param action {$ObjMap}\n * @returns {({hasError, providers, configDump}&{providers: *})|({hasError, providers, configDump}&{hasError: boolean, error: *})|({hasError, providers, configDump}&{hasError: boolean, configDump: *})|{hasError: boolean, providers: Array, configDump: {}}}\n */\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_PROVIDERS:\n            return {\n                ...state,\n                providers: action.payload,\n            };\n\n        case GET_CONFIG_DUMP:\n            if (action.status === REQUEST_SUCCESS)\n                return {\n                    ...state,\n                    configDump: action.payload,\n                    hasError: false\n                };\n            if (action.status === REQUEST_ERROR)\n                return {\n                    ...state,\n                    hasError: true,\n                    error: action.payload\n                };\n            break;\n        default:\n            return state;\n    }\n}","import {\n\tADD_LAYOUT_CONTAINER,\n\tCHANGE_ACTIVE_REMOTE_CONTAINER,\n\tCHANGE_DISTRACTION_FREE_MODE,\n\tCHANGE_LAYOUT_COLS,\n\tGET_CONFIG_FOR_REMOTE,\n\tGET_FILES_LIST,\n\tGET_REMOTE_LIST,\n\tREMOVE_LAYOUT_CONTAINER,\n\tREQUEST_ERROR,\n\tREQUEST_SUCCESS\n} from \"../actions/types\";\n\nconst initialState = {\n\tconfigs: {},\n\tremotes: [],\n\tfiles: {},\n\thasError: false,\n\tnumContainers: 0,\n\tcontainers: [],\n\tactiveRemoteContainerID: {},\n\tdistractionFreeMode: false,\n\tnumCols: 1\n};\n/**\n * Specifies the explorer specific reducers for the redux actions.\n * @param state\n * @param action\n * @returns {{configs: {}, remotes: Array, files: {}, hasError: boolean}|({configs, remotes, files, hasError}&{files: (initialState.files|{})})|({configs, remotes, files, hasError}&{files: (initialState.files|{}), hasError: boolean})|({configs, remotes, files, hasError}&{hasError: boolean, error: *})|({configs, remotes, files, hasError}&{configs: ((initialState.configs&*)|({}&*)), hasError: boolean})|({configs, remotes, files, hasError}&{remotes: *, hasError: boolean})}\n */\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_CONFIG_FOR_REMOTE:\n            if (action.status === REQUEST_SUCCESS)\n                return {\n                    ...state,\n                    configs: {...state.configs, ...action.payload},\n                    hasError: false\n                };\n            if (action.status === REQUEST_ERROR)\n                return {\n                    ...state,\n                    error: action.payload,\n                    hasError: true\n                };\n            break;\n        case GET_REMOTE_LIST:\n            if (action.status === REQUEST_SUCCESS)\n                return {\n                    ...state,\n                    remotes: action.payload,\n                    hasError: false\n                };\n            if (action.status === REQUEST_ERROR)\n                return {\n                    ...state,\n                    error: action.payload,\n                    hasError: true\n                };\n            break;\n        case GET_FILES_LIST:\n            if (action.status === REQUEST_SUCCESS) {\n                return {\n                    ...state,\n                    files: {...state.files, [action.payload.path]: {time: new Date(), files: action.payload.filesList}},\n                    hasError: false\n                }\n            }\n            if (action.status === REQUEST_ERROR)\n                return {\n                    ...state,\n\t\t\t\t\tfiles: {\n\t\t\t\t\t\t...state.files,\n\t\t\t\t\t\t[action.payload.path]: {\n\t\t\t\t\t\t\ttime: new Date(),\n\t\t\t\t\t\t\tfiles: [],\n\t\t\t\t\t\t\thasError: true,\n\t\t\t\t\t\t\terror: action.payload.error\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tbreak;\n\n\t\tcase ADD_LAYOUT_CONTAINER:\n\t\t\tstate.containers.push({ID: action.payload.containerID, paneID: action.payload.paneID});\n\t\t\tstate.numContainers = state.containers.length;\n\t\t\tstate.activeRemoteContainerID = {\n\t\t\t\t...state.activeRemoteContainerID,\n\t\t\t\t[action.payload.paneID]: action.payload.containerID\n\t\t\t};\n\t\t\treturn {...state};\n\t\tcase REMOVE_LAYOUT_CONTAINER:\n\t\t\t// Remove the specified containerID from containers\n\t\t\tstate.containers = state.containers.filter(item => item.ID !== action.payload.containerID);\n\t\t\tstate.numContainers = state.containers.length;\n\t\t\tconst lastItem = state.containers.filter(item => item.paneID === action.payload.paneID).slice(-1).pop();\n\t\t\tstate.activeRemoteContainerID = {\n\t\t\t\t...state.activeRemoteContainerID,\n\t\t\t\t[action.payload.paneID]: (lastItem ? lastItem.ID : undefined)\n\t\t\t};\n\n\t\t\t// state.activeRemoteContainerID = lastItem ? lastItem : \"\";\n\t\t\treturn {...state};\n\t\tcase CHANGE_ACTIVE_REMOTE_CONTAINER:\n\t\t\tstate.activeRemoteContainerID = {\n\t\t\t\t...state.activeRemoteContainerID,\n\t\t\t\t[action.payload.paneID]: action.payload.containerID\n\t\t\t};\n\t\t\treturn {...state};\n\t\tcase CHANGE_LAYOUT_COLS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tnumCols: action.payload.numCols\n\t\t\t};\n\t\tcase CHANGE_DISTRACTION_FREE_MODE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdistractionFreeMode: action.payload\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n\n}\n","// A very simple stack implementation to handle back links in remote explorer\nclass Stack  {\n    constructor(items = undefined, count = undefined) {\n        if (items && count) {\n            this.items = items;\n            this.count = count;\n            return;\n        }\n        this.items = [{remoteName: \"\", remotePath: \"\"}];\n        this.count = 1;\n    }\n\n    getLength() {\n        return this.count;\n    }\n\n    push(item) {\n        this.items.push(item);\n        this.count = this.count + 1;\n    }\n\n    pop() {\n        if (this.count > 0) {\n            this.count = this.count - 1;\n        }\n\n        return this.items.pop();\n    }\n\n    peek() {\n        return this.items.slice(-1)[0];\n    }\n\n    empty() {\n        this.items = [];\n        this.count = 0;\n    }\n\n    moveBack() {\n\n        if (this.getLength() > 1)\n            return this.pop();\n    }\n}\n\nexport default Stack;","import Stack from './Stack'\n\n// A very simple stack implementation to handle back links in remote explorer\nclass BackStack {\n    constructor(backStack = undefined) {\n        if (backStack) {\n            this.backStack = new Stack(backStack.backStack.items, backStack.backStack.count);\n            this.forwardStack = new Stack(backStack.forwardStack.items, backStack.forwardStack.count);\n            return;\n        }\n        this.backStack = new Stack();\n        this.forwardStack = new Stack();\n    }\n\n\n    getLength() {\n        return this.backStack.getLength();\n    }\n\n    push(item) {\n\n        this.backStack.push(item);\n        this.forwardStack.empty();\n\n    }\n\n    pop() {\n        const temp = this.backStack.pop();\n        return temp;\n    }\n\n    peek() {\n        return this.backStack.peek();\n    }\n\n    empty() {\n        this.backStack.empty();\n        this.forwardStack.empty();\n    }\n\n    moveBack() {\n        const temp = this.backStack.moveBack();\n        if(temp)\n            this.forwardStack.push(temp);\n        return temp;\n    }\n\n    moveForward(){\n        const temp = this.forwardStack.pop();\n        if(temp){\n            //Pop was successful\n            this.backStack.push(temp);\n        }\n        return temp;\n\n    }\n\n\n\n}\n\nexport default BackStack;","import {\n\tCHANGE_GRID_MODE,\n\tCHANGE_LOAD_IMAGES,\n\tCHANGE_PATH,\n\tCHANGE_REMOTE_NAME,\n\tCHANGE_REMOTE_PATH,\n\tCHANGE_SEARCH_QUERY,\n\tCHANGE_SORT_FILTER,\n\tCHANGE_VISIBILITY_FILTER,\n\tCREATE_PATH,\n\tNAVIGATE_BACK,\n\tNAVIGATE_FWD,\n\tNAVIGATE_UP,\n\tREMOVE_PATH\n} from \"../actions/types\";\nimport BackStack from \"../utils/classes/BackStack\";\n\nconst initialState = {\n    backStacks: {},\n    currentPaths: {},\n    visibilityFilters: {},\n    gridMode: {},\n    searchQueries: {},\n    loadImages: {},\n    sortFilters: {},\n    sortFiltersAscending: {}\n};\n\n/**\n * Specifies the reducers for explorer state manipulation.\n * @param state {$ObjMap}\n * @param action {$ObjMap}\n * @returns {{currentPaths: {}, visibilityFilters: {}, gridMode: {}, searchQueries: {}, backStacks: {}}|({currentPaths, visibilityFilters, gridMode, searchQueries, backStacks}&{currentPaths: (initialState.currentPaths|{}), visibilityFilters: (initialState.visibilityFilters|{}), gridMode: (initialState.gridMode|{}), searchQueries: (initialState.searchQueries|{}), backStacks: (initialState.backStacks|{})})}\n */\nexport default function (state = initialState, action) {\n\n    const id = action.id;\n    if (id) {\n\n        let backStack = state.backStacks[id];\n        if (!backStack || !(backStack instanceof BackStack)) {\n\n\n            if (!(backStack instanceof BackStack)) {\n                // Redux dosen't store the internal functions of class objects when serialized. So as a work around,\n                // if the backstack is not an instance of backStack, i.e. its methods are missing,\n                // create a new backstack with current data\n                backStack = new BackStack(backStack)\n            } else {\n                backStack = new BackStack();\n            }\n        }\n\n        let remoteName = action.remoteName;\n        let remotePath = action.remotePath;\n\n        if (!remoteName) remoteName = \"\";\n        if (!remotePath) remotePath = \"\";\n        const data = {\n            remoteName: remoteName,\n            remotePath: remotePath\n        };\n\n        let visibilityFilter = state.visibilityFilters[id];\n        let gridMode = state.gridMode[id];\n\n        let searchQuery = \"\";\n        let loadImages = state.loadImages[id];\n        if (!loadImages) loadImages = false;\n\n        let sortFilterAscending = state.sortFiltersAscending[id];\n        if(!sortFilterAscending) sortFilterAscending = true;\n        let sortFilter = state.sortFilters[id];\n        if(!sortFilter) sortFilter = \"name\";\n\n        switch (action.type) {\n            case CHANGE_PATH:\n                backStack.push(data);\n                break;\n\n            case CHANGE_REMOTE_NAME:\n                if (remoteName.indexOf('/') === 0) {/*The name starts with a /: local Name*/\n                    remotePath = remoteName;\n                    remoteName = \"/\";\n\n                } else {\n                    remotePath = \"\";\n                }\n                backStack.empty();\n                backStack.push({remoteName: remoteName, remotePath: remotePath});\n                // ptr++;\n\n                break;\n\n            case CHANGE_REMOTE_PATH:\n\t\t\t\tbackStack.push({remoteName: backStack.peek().remoteName, remotePath: remotePath});\n\t\t\t\t// ptr++;\n\n\t\t\t\tbreak;\n\n\t\t\tcase CREATE_PATH:\n\t\t\t\tif (!backStack || !(backStack instanceof BackStack))\n\t\t\t\t\tbackStack = new BackStack();\n\t\t\t\tbreak;\n\t\t\tcase REMOVE_PATH:\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tbackStacks: {...state.backStacks, [id]: undefined},\n\t\t\t\t\tcurrentPaths: {...state.currentPaths, [id]: undefined},\n\t\t\t\t\tvisibilityFilters: {...state.visibilityFilters, [id]: undefined},\n\t\t\t\t\tgridMode: {...state.gridMode, [id]: undefined},\n\t\t\t\t\tsearchQueries: {...state.searchQueries, [id]: undefined},\n\t\t\t\t\tloadImages: {...state.loadImages, [id]: undefined},\n\t\t\t\t\tsortFilters: {...state.sortFilters, [id]: undefined},\n\t\t\t\t\tsortFiltersAscending: {...state.sortFiltersAscending, [id]: undefined},\n\t\t\t\t};\n\t\t\t// break;\n\t\t\tcase NAVIGATE_UP:\n\t\t\t\t// TODO: Write logic for up, which will navigate one directory up\n\t\t\t\tlet current = backStack.peek();\n\n\t\t\t\tif (current.remotePath && current.remotePath !== \"\") {\n\t\t\t\t\tconst splitPath = current.remotePath.split('/');\n\t\t\t\t\tcurrent.remotePath = \"\";\n\t\t\t\t\tif (splitPath.length > 1)\n\t\t\t\t\t\tfor (let i = 0; i < splitPath.length - 1; i++) {\n\t\t\t\t\t\t\tcurrent.remotePath = current.remotePath + ((i !== 0) ? '/' : '') + splitPath[i];\n                        }\n                }\n                backStack.push(current);\n                break;\n\n            case NAVIGATE_FWD:\n                backStack.moveForward();\n                break;\n\n            case NAVIGATE_BACK:\n                backStack.moveBack();\n                break;\n            case CHANGE_VISIBILITY_FILTER:\n\t\t\t\tif (action.filter)\n\t\t\t\t\tvisibilityFilter = action.filter;\n\t\t\t\telse\n\t\t\t\t\tvisibilityFilter = \"\";\n                break;\n            case CHANGE_GRID_MODE:\n                if (action.mode) {\n                    gridMode = action.mode;\n                }\n                break;\n\n            case CHANGE_SEARCH_QUERY:\n                searchQuery = action.searchQuery;\n                break;\n\n            case CHANGE_LOAD_IMAGES:\n                loadImages = action.payload;\n                break;\n            case CHANGE_SORT_FILTER:\n                sortFilter = action.payload.sortFilter;\n                sortFilterAscending =  action.payload.sortFilterAscending;\n                break;\n            default:\n                break;\n        }\n        return {\n            ...state,\n            backStacks: {...state.backStacks, [id]: backStack},\n            currentPaths: {...state.currentPaths, [id]: {...backStack.peek()}},\n            visibilityFilters: {...state.visibilityFilters, [id]: visibilityFilter},\n            gridMode: {...state.gridMode, [id]: gridMode},\n            searchQueries: {...state.searchQueries, [id]: searchQuery},\n            loadImages: {...state.loadImages, [id]: loadImages},\n            sortFilters: {...state.sortFilters, [id]: sortFilter},\n            sortFiltersAscending: {...state.sortFiltersAscending, [id]: sortFilterAscending},\n        };\n    } else {\n        // console.error(\"ID is unexpectedly null\");\n        return state;\n    }\n\n\n};\n","import {GET_REMOTE_ABOUT, REQUEST_ERROR, REQUEST_SUCCESS} from \"../actions/types\";\n\nconst initialState = {\n    about: {}\n};\n/**\n * Specifies reducers for getting information about the current providers.\n * @param state\n * @param action\n * @returns {{about: {}}|({about}&{about: (initialState.about|{})})}\n */\nexport default function (state = initialState, action) {\n\n    switch (action.type) {\n        case GET_REMOTE_ABOUT:\n            if (action.status === REQUEST_SUCCESS) {\n                return {...state, about: {...state.about, [action.id]: action.payload}};\n            } else if (action.status === REQUEST_ERROR) {\n                // console.log(\"Error occurred\");\n                return state;\n            }\n            break;\n\n        default:\n            return state;\n\n    }\n}","import {CHANGE_AUTH_KEY, CHANGE_AXIOS_INTERCEPTOR, CHANGE_IP_ADDRESS} from \"../actions/types\";\nimport axiosInstance from \"../utils/API/API\";\nimport {AUTH_KEY, IP_ADDRESS_KEY} from \"../utils/Constants\";\n\nconst initialState = {\n    auth: {authKey: \"\", ipAddress: \"http://localhost:5572\", interceptor: \"\"}\n};\n\n/**\n * Specifies reducers for user actions like change username, password, ipAddress etc.\n * @param state\n * @param action\n * @returns {{auth: {authKey: string, ipAddress: string}}|({auth}&{auth: ((initialState.auth&*)|({password, ipAddress, userName}&*))})}\n */\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case CHANGE_AUTH_KEY:\n        case CHANGE_IP_ADDRESS:\n            state = {\n                ...state,\n                auth: {...state.auth, ...action.payload}\n            };\n            localStorage.setItem(AUTH_KEY, state.auth.authKey);\n            // localStorage.setItem(USER_NAME_KEY, state.auth.userName);\n            // localStorage.setItem(PASSWORD_KEY, state.auth.password);\n            localStorage.setItem(IP_ADDRESS_KEY, state.auth.ipAddress);\n            return state;\n        case CHANGE_AXIOS_INTERCEPTOR:\n            if (state.auth.interceptor)\n                axiosInstance.interceptors.request.eject(state.auth.interceptor);\n\n            const interceptorID = axiosInstance.interceptors.request.use(\n                config => {\n                    // Setup the configuration of authentication headers\n                    config.headers.Authorization = 'Basic ' + localStorage.getItem(AUTH_KEY);\n                    config.baseURL = localStorage.getItem(\"ipAddress\");\n                    return config;\n                },\n                error => Promise.reject(error)\n            );\n            return {\n                ...state,\n                auth: {...state.auth, interceptor: interceptorID}\n            };\n        default:\n            return state;\n    }\n}","import {LOAD_IMAGE, REQUEST_ERROR, REQUEST_LOADING, REQUEST_SUCCESS} from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case LOAD_IMAGE:\n            const {url, data, error} = action.payload;\n            let save = state[url];\n            if (!save)\n                save = {\n                    isLoading: false,\n                    data: \"\",\n                    error: \"\",\n                    hasError: false\n                };\n\n            switch (action.status) {\n                case REQUEST_LOADING:\n                    save.isLoading = true;\n                    save.hasError = false;\n                    break;\n                case REQUEST_SUCCESS:\n                    save.isLoading = false;\n                    save.hasError = false;\n                    save.data = data;\n                    break;\n                case REQUEST_ERROR:\n                    save.hasError = true;\n                    save.isLoading = false;\n                    save.error = error;\n                    break;\n                default:\n                    break;\n            }\n            return {\n                ...state,\n                [url]: {...save}\n            };\n\n        default:\n            return state;\n    }\n}","import { GET_VERSION, REQUEST_ERROR, REQUEST_SUCCESS } from '../actions/types';\n\nexport const initialState = {\n  arch: '',\n  decomposed: [],\n  goVersion: '',\n  isGit: false,\n  os: '',\n  version: '',\n  hasError: false\n};\n\nexport default (state = initialState, action) => {\n  if (action.type === GET_VERSION) {\n    if (action.status === REQUEST_SUCCESS) {\n      return {\n        ...state,\n        ...action.payload,\n        hasError: false\n      };\n    }\n    if (action.status === REQUEST_ERROR) {\n      return {\n        ...state,\n        error: action.payload,\n        hasError: true\n      };\n    }\n  }\n\n  return state;\n};\n","import {combineReducers} from 'redux';\n\nimport statusReducer from './statusReducer';\nimport configReducer from \"./configReducer\";\nimport explorerReducer from \"./explorerReducer\";\nimport explorerState from \"./explorerStateReducer\";\nimport {SIGNOUT_REQUEST} from \"../actions/types\";\nimport providerStatusReducer from \"./providerStatusReducer\";\nimport userActionsReducer from \"./userActionsReducer\";\nimport imagesReducer from \"./imagesReducer\";\nimport versionReducer from \"./versionReducer\";\n\n/**\n * Configures the root reducer to be executed before any other reducers configured in the system.\n * This involves actions for clearing the localStorage and state when user signs out.\n * @param state\n * @param action\n * @returns {any}\n */\nconst rootReducer = (state, action) => {\n    if (action.type === SIGNOUT_REQUEST) {\n        localStorage.clear();\n        state = undefined;\n    }\n\n    return appReducer(state, action);\n};\n\n/**\n * List of reducers to be configured. The reducers are called one by one from top to bottom.\n * @type {Reducer<any>}\n */\nconst appReducer = combineReducers({\n    status: statusReducer,\n    config: configReducer,\n    remote: explorerReducer,\n    explorer: explorerState,\n    providerStatus: providerStatusReducer,\n    user: userActionsReducer,\n    imageLoader: imagesReducer,\n    version: versionReducer\n    // remoteOps: remoteOpsReducer\n});\n\nexport default rootReducer;","// Used to persist redux-state to the localStorage.\nexport class StateLoader {\n\n    /**\n     * It loads the redux state from the local store.\n     * @returns {{}|any}\n     */\n    loadState() {\n        try {\n            let serializedState = localStorage.getItem(\"curState\");\n\n            if (serializedState === null) {\n                return this.initializeState();\n            }\n\n            return JSON.parse(serializedState);\n        } catch (err) {\n            return this.initializeState();\n        }\n    }\n\n    /**\n     * Saves the current state to the localStore with variable name curState.\n     * BEWARE: Uses expensive operation JSON.stringify(). May cause performance issues. Any alternative is welcome.\n     * @param state {$ObjMap} The current state to be saved.\n     */\n    saveState(state) {\n        const newState = {\n            ...state,\n            imageLoader: undefined\n        };\n        try {\n            let serializedState = JSON.stringify(newState);\n            localStorage.setItem(\"curState\", serializedState);\n\n        } catch (err) {\n            console.error(\"Error occurred while saving state\");\n            throw new Error(`Cannot Save State ${err}`);\n        }\n    }\n\n    /**\n     * Initializes the redux state with an empty map {}.\n     * @returns {{}}\n     */\n    initializeState() {\n        return {\n            //state object\n        }\n    };\n}\n","const throttled = {};\n\nexport default ({getState, dispatch}) => next => action => {\n    const time = action.meta && action.meta.throttle;\n\n    if (!time)\n        return next(action);\n\n    if (throttled[action.type]) {\n        return;\n    }\n\n    throttled[action.type] = true;\n\n    setTimeout(() => {\n        throttled[action.type] = false;\n    }, time);\n\n    next(action);\n}","import {applyMiddleware, compose, createStore} from \"redux\";\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport {StateLoader} from \"./utils/StateLoader\";\nimport throttledMiddleware from './throttled';\n\n\nexport const middleware = [thunk, throttledMiddleware];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst stateLoader = new StateLoader();\n\nconst store = createStore(rootReducer,\n    stateLoader.loadState(),\n    composeEnhancers(\n        applyMiddleware(...middleware)\n    ));\n\n//Function to persist store data to localStorage\nstore.subscribe(() => {\n    stateLoader.saveState(store.getState());\n});\n\nexport default store;","import 'react-app-polyfill/ie9'; // For IE 9-11 support\nimport 'react-app-polyfill/ie11'; // For IE 11 support\nimport './polyfill'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const FETCH_STATUS = 'FETCH_STATUS';\nexport const GET_PROVIDERS = 'GET_PROVIDERS';\nexport const GET_VERSION = 'GET_VERSION';\nexport const GET_CONFIG_FOR_REMOTE = 'GET_CONFIG_FOR_REMOTE';\nexport const GET_REMOTE_LIST = 'GET_REMOTE_LIST';\nexport const GET_CONFIG_DUMP = 'GET_CONFIG_DUMP';\nexport const GET_FILES_LIST = 'GET_FILES_LIST';\nexport const CHANGE_PATH = 'CHANGE_PATH';\nexport const CREATE_PATH = 'CREATE_PATH';\nexport const REMOVE_PATH = 'REMOVE_PATH';\nexport const CHANGE_REMOTE_NAME = 'CHANGE_REMOTE_NAME';\nexport const CHANGE_REMOTE_PATH = 'CHANGE_REMOTE_PATH';\nexport const NAVIGATE_UP = 'NAVIGATE_UP';\nexport const NAVIGATE_FWD = 'NAVIGATE_FWD';\nexport const NAVIGATE_BACK = 'NAVIGATE_BACK';\nexport const CHANGE_VISIBILITY_FILTER = 'CHANGE_VISIBILITY_FILTER';\nexport const CHANGE_GRID_MODE = 'CHANGE_GRID_MODE';\nexport const SIGNOUT_REQUEST = 'SIGNOUT_REQUEST';\nexport const CHANGE_SEARCH_QUERY = 'CHANGE_SEARCH_QUERY';\nexport const GET_REMOTE_ABOUT = 'GET_REMOTE_ABOUT';\nexport const CREATE_PUBLIC_LINK = 'CREATE_PUBLIC_LINK';\nexport const GET_RUNNING_JOBS = 'GET_RUNNING_JOBS';\nexport const GET_STATUS_FOR_RUNNING_JOB = 'GET_STATUS_FOR_RUNNING_JOB';\nexport const SET_BANDWIDTH = 'SET_BANDWIDTH';\nexport const GET_BANDWIDTH = 'GET_BANDWIDTH';\nexport const ENABLE_STATUS_CHECK = 'ENABLE_STATUS_CHECK';\n// export const CHANGE_USER_NAME_PASSWORD = 'CHANGE_USER_NAME_PASSWORD';\nexport const CHANGE_AUTH_KEY = 'CHANGE_AUTH_KEY';\nexport const CHANGE_IP_ADDRESS = 'CHANGE_IP_ADDRESS';\nexport const CHANGE_AXIOS_INTERCEPTOR = 'CHANGE_AXIOS_INTERCEPTOR';\nexport const CHANGE_LOAD_IMAGES = 'CHANGE_LOAD_IMAGES';\nexport const LOAD_IMAGE = 'LOAD_IMAGE';\nexport const CHANGE_LAYOUT_COLS = 'CHANGE_LAYOUT_COLS';\nexport const ADD_LAYOUT_CONTAINER = 'ADD_LAYOUT_CONTAINER';\nexport const REMOVE_LAYOUT_CONTAINER = 'REMOVE_LAYOUT_CONTAINER';\nexport const CHANGE_ACTIVE_REMOTE_CONTAINER = 'CHANGE_ACTIVE_REMOTE_CONTAINER';\nexport const CHANGE_DISTRACTION_FREE_MODE = \"CHANGE_DISTRACTION_FREE_MODE\";\nexport const CHANGE_SORT_FILTER = \"CHANGE_SORT_FILTER\";\n\n\nexport const REQUEST_ERROR = 'ERROR';\nexport const REQUEST_SUCCESS = 'SUCCESS';\nexport const REQUEST_LOADING = 'LOADING';\n","/**\n * Returns a string array with possible filtering options.\n * @type {string[]}\n */\nexport const visibilityFilteringOptions = [\"Images\", \"Pdf\", \"Videos\"];\n\n/**\n * Refresh timeout for checking backend status.\n * In milliseconds.\n * @type {number}\n */\nexport const STATUS_REFRESH_TIMEOUT = 1000 * 5;\n/**\n * Refresh timeout for checking if the config is created.\n * In milliseconds.\n * @type {number}\n */\nexport const NEW_DRIVE_CONFIG_REFRESH_TIMEOUT = 1000;\nexport const MODAL_ROOT_ELEMENT = \"modal-root\";\n\nexport const USER_NAME_KEY = \"userName\";\nexport const AUTH_KEY = \"authKey\";\nexport const PASSWORD_KEY = \"password\";\nexport const IP_ADDRESS_KEY = \"ipAddress\";\n\nexport const FILES_VIEW_HEIGHT = \"75vh\";","const urls = {\n    /**\n     * Make Directory.\n     */\n    mkdir: \"operations/mkdir\",\n    /**\n     * Purge a directory.\n     */\n    purge: \"operations/purge\",\n    /**\n     * Delete a file.\n     */\n    deleteFile: \"operations/deletefile\",\n    /**\n     * Create public link.\n     */\n    createPublicLink: \"operations/publiclink\",\n    /**\n     * Stats for rclone backend.\n     */\n    stats: \"core/stats\",\n    /**\n     * Check and set bwlimit.\n     */\n    bwlimit: \"core/bwlimit\",\n    /**\n     * Move a directory.\n     */\n    moveDir: \"sync/move\",\n    /**\n     * Move a file.\n     */\n    moveFile: \"operations/movefile\",\n    /**\n     * Copy Directory\n     */\n    copyDir: \"sync/copy\",\n    /**\n     * Copy Files.\n     */\n    copyFile: \"operations/copyfile\",\n    /**\n     * Cleanup the remote recycle bin(trash).\n     */\n    cleanUpRemote: \"operations/cleanup\",\n\n    /**\n     * Try to connect without any authentication headers.\n     */\n    noopAuth: \"rc/noopauth\",\n    /**\n     * Check the version of the rclone.\n     */\n    getRcloneVersion: \"core/version\",\n\n    /**\n     * Memstats for the rclone backend.\n     */\n    getRcloneMemStats: \"core/memstats\",\n    /**\n     * Get options available in the backend.\n     */\n    getOptions: \"options/get\",\n    /**\n     * Get providers configuration in the rclone backend.\n     */\n    getProviders: \"config/providers\",\n    /**\n     * Get entire remote configuration dump from backend.\n     */\n    getConfigDump: \"config/dump\",\n    /**\n     * List the currently running jobs.\n     */\n    getRunningJobs: \"job/list\",\n    /**\n     * Get the status for a job.\n     */\n    getStatusForJob: \"job/status\",\n    /**\n     *  Get config for a specific remote.\n     */\n    getConfigForRemote: \"config/get\",\n    /**\n     * Create a new config with parameters.\n     */\n    createConfig: \"config/create\",\n    /**\n     * Update an existing config with parameters.\n     */\n    updateConfig: \"config/update\",\n    /**\n     * Get File system information and supported features for a given remote time.\n     */\n    getFsInfo: \"operations/fsinfo\",\n\n    /**\n     * List the remote names of created remotes.\n     */\n    listRemotes: \"config/listremotes\",\n    /**\n     * Get the files for given remoteName and path.\n     */\n    getFilesList: \"operations/list\",\n\n    /**\n     * Get information about the rclone backend.\n     */\n    getAbout: \"operations/about\",\n    /**\n     * Delete a config with config name.\n     */\n    deleteConfig: \"config/delete\",\n\n    /**\n     * Stop a running job by job id\n     */\n    stopJob: \"job/stop\",\n\n};\nexport default urls;\n","import axios from \"axios\";\nimport {isLocalRemoteName} from \"../Tools\";\nimport {AUTH_KEY, IP_ADDRESS_KEY} from \"../Constants\";\nimport urls from \"./endpoint\";\n\n/**\n * Global level axios configuration. These settings are automatically used in other places by using an axiosInstance instead of axios directly\n */\nlet axiosInstance = axios.create({\n    headers: {'Content-Type': 'application/json'},\n    responseType: \"json\"\n});\n\n/**\n * Interceptor adds basic authentication to every axios request.\n */\naxiosInstance.interceptors.request.use(\n    config => {\n        config.baseURL = localStorage.getItem(IP_ADDRESS_KEY);\n\n        config.headers.Authorization = 'Basic ' + localStorage.getItem(AUTH_KEY);\n        return config;\n    },\n    error => Promise.reject(error)\n);\n\n/**\n * Helper Method for moving a file/directory.\n * @param srcFs     {string}    remoteName of the source\n * @param srcRemote {string}    remotePath of the source\n * @param dstFs     {string}    remoteName of the destination\n * @param dstRemote {string}    remotePath of the destination\n * @param Name      {string}    name of the file/directory\n * @param IsDir     {boolean}   Determines whether the current path is a directory (true) or a file (false)\n * @returns         {Promise<*>}\n */\nexport function performMoveFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir) {\n    return performCopyOrMoveFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir, 'move');\n}\n\n/**\n * Helper Method for copying a file/directory.\n * @param srcFs     {string}    remoteName of the source\n * @param srcRemote {string}    remotePath of the source\n * @param dstFs     {string}    remoteName of the destination\n * @param dstRemote {string}    remotePath of the destination\n * @param Name      {string}    name of the file/directory\n * @param IsDir     {boolean}   Determines whether the current path is a directory (true) or a file (false)\n * @returns         {Promise<*>}\n */\nexport function performCopyFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir) {\n    return performCopyOrMoveFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir, 'copy');\n}\n\n/**\n * Perform the actual copying/ moving of a file/directory.\n * @access private\n * @param srcFs     {string}    remoteName of the source\n * @param srcRemote {string}    remotePath of the source\n * @param dstFs     {string}    remoteName of the destination\n * @param dstRemote {string}    remotePath of the destination\n * @param Name      {string}    name of the file/directory\n * @param IsDir     {boolean}   Determines whether the current path is a directory (true) or a file (false)\n * @param mode      {string}    Determines whether to copy or move. Allowed values: \"copy\", \"move\".\n * @returns         {Promise<AxiosResponse<T>>}\n */\nasync function performCopyOrMoveFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir, mode) {\n    let url = \"\";\n    if (mode === \"move\") {\n        if (IsDir) {\n            url = urls.moveDir;\n        } else {\n            url = urls.moveFile;\n        }\n    } else {\n        if (IsDir) {\n            url = urls.copyDir;\n        } else {\n            url = urls.copyFile;\n        }\n    }\n\n    if (isLocalRemoteName(srcFs)) {\n        srcFs = \"\";\n    }\n\n    if (isLocalRemoteName(dstFs)) {\n        dstFs = \"\";\n    }\n\n    let data = {\n        _async: true\n    };\n\n\n    if (IsDir) {\n\n        const splitRes = srcRemote.split('/');\n\n        data = {\n            ...data,\n            srcFs: srcFs + srcRemote,\n            dstFs: dstFs + dstRemote + \"/\" + splitRes[splitRes.length - 1],\n        };\n        console.log(\"DirOp:\", data);\n        return await axiosInstance.post(url, data);\n\n    } else {\n        if (dstRemote === \"\") {\n            dstRemote = Name;\n        } else {\n            dstRemote += \"/\" + Name;\n        }\n\n        data = {\n            ...data,\n            srcFs: srcFs,\n            srcRemote: srcRemote,\n            dstFs: dstFs,\n            dstRemote: dstRemote,\n        };\n        return await axiosInstance.post(url, data);\n\n    }\n}\n\n\nexport default axiosInstance;\n","/**\n * Returns whether the passed in object (obj) is empty or it contains some entries.\n * @param obj {$ObjMap} An object to check if it is empty: it can be an array or a map.\n * @returns {boolean}\n */\nexport function isEmpty(obj) {\n    if (Array.isArray(obj)) return obj.length === 0;\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}\n\n/**\n * Converts bytes into MB.\n * @param bytes {number} bytes to be converted.\n * @returns {number}\n */\nexport function bytesToMB(bytes) {\n    if (bytes === 0) return 0;\n    const mb = bytes / 1024 / 1024;\n\n    return mb;\n}\n\n/**\n * Converts bytes to KB.\n * @param bytes {number} bytes to be converted\n * @returns {number}\n */\nexport function bytesToKB(bytes) {\n    if (bytes === 0) return 0;\n    const kb = bytes / 1024;\n\n    return kb;\n}\n\n/**\n * Converts bytes to GB.\n * @param bytes {number} bytes to be converted\n * @returns {number}\n */\nexport function bytesToGB(bytes) {\n    if (bytes === 0) return 0;\n    const mb = bytes / 1024 / 1024 / 1024;\n\n    return mb;\n}\n\n/**\n * Converts bytes per second to Megabytes per second.\n * @param bps {number} bytes per second.\n * @returns {number}\n */\nexport function bpsToMbps(bps) {\n    if (bps === 0) return 0;\n    const mbps = bytesToMB(bps);\n    return mbps;\n}\n\n/**\n * Format bytes to a human readable format.\n * @param bytes {number} bytes to be formatted.\n * @param decimals {number} specifies the precision of numbers after the decimal point.\n * @returns {string}\n */\nexport function formatBytes(bytes, decimals = 2) {\n    if (bytes < 1) return '0 B';\n\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n\n/**\n * Converts time in seconds to a minute and hour string of the format \"HH:MM:SS hrs\"\n * @param seconds {number} Number of seconds since 00:00:00\n * @returns {string}\n */\nexport function secondsToMinutesHourString(seconds) {\n    if (seconds === 0) {\n        return `00:00:00 S`;\n    }\n    let minutes = seconds / 60;\n    seconds = seconds % 60;\n    let hours = minutes / 60;\n    minutes = minutes % 60;\n\n    return `${Math.round(hours)}:${Math.round(minutes)}:${Math.round(seconds)} hrs`;\n}\n\n/**\n * Converts seconds to a human readable string with support for year, day, week, minute, seconds.\n * @param seconds\n * @returns {string}\n */\nexport function secondsToStr(seconds) {\n    // TIP: to find current time in milliseconds, use:\n    // var  current_time_milliseconds = new Date().getTime();\n\n    function numberEnding(number) {\n        return (number > 1) ? 's' : '';\n    }\n\n    let years = Math.floor(seconds / 31536000);\n    if (years) {\n        return years + ' year' + numberEnding(years);\n    }\n    //TODO: Months! Maybe weeks?\n    let days = Math.floor((seconds %= 31536000) / 86400);\n    if (days) {\n        return days + ' day' + numberEnding(days);\n    }\n    let hours = Math.floor((seconds %= 86400) / 3600);\n    if (hours) {\n        return hours + ' hour' + numberEnding(hours);\n    }\n    let minutes = Math.floor((seconds %= 3600) / 60);\n    if (minutes) {\n        return minutes + ' minute' + numberEnding(minutes);\n    }\n    seconds = seconds % 60;\n    if (seconds) {\n        return seconds.toFixed(2) + ' second' + numberEnding(seconds);\n    }\n    return 'Just now'; //'just now' //or other string you like;\n}\n\n/**\n * Base validator takes in a regex exp and tests an input str against that regex.\n * @param regex\n * @param str\n * @returns {boolean | * | never}\n */\nexport function baseValidator(regex, str) {\n\n    return regex.test(str);\n}\n\n/**\n * Validate Size Suffix of the format (off | 1K | 1M | 100G | 10P ) etc\n * @param str {string} String to be validated\n * @returns {boolean|*|never}\n */\nexport function validateSizeSuffix(str) {\n    const regex = /^(off|(([0-9]+[.][0-9]+|[0-9]+)([KMGTP])))$/i;\n\n    return baseValidator(regex, str);\n}\n\n/**\n * Validate integer without decimal points (0-9)\n * @param str {number|string} The string to be validated.\n * @returns {boolean|*|never}\n */\nexport function validateInt(str) {\n    const regex = /^([0-9]+)$/;\n    return baseValidator(regex, str);\n}\n\n/**\n * Validate duration hours, minutes, seconds, milliseconds etc.\n * @param str {number|string} The duration to be validated.\n * @returns {boolean|*|never}\n */\nexport function validateDuration(str) {\n    const regex = /^(\\d+[h])?(\\d+[m])?(\\d+[s])?(\\d+ms)??$/i;\n    return baseValidator(regex, str);\n}\n\n/**\n * Validate the allowed drive name\n * @returns {boolean|*|never}\n * */\nexport function validateDriveName(name) {\n    const regex = /^[0-9A-Za-z_-]*$/i;\n    return baseValidator(regex, name);\n}\n\n/**\n * Opens the specified URL in a new tab and focus on it.\n * @param url {string} URL to be opened.\n */\nexport function openInNewTab(url) {\n    let win = window.open(url, '_blank');\n    win.focus();\n}\n\n/**\n * Helper function for finding the provider with a given prefix.\n * @param config {$ObjMap} Array of remote configs\n * @param name {string} Specifies the name of the provider to find.\n * @returns {*}\n */\n\nexport function findFromConfig(config, name) {\n    const currentConfig = config.find((ele, idx, array) => {\n        return (name === ele.Prefix);\n    });\n    return currentConfig;\n}\n\n\n/**\n * Helper function to add semicolon to the last.\n * Behaviour: if the passed in string does not have a semicolon at last, then insert it.\n * If there is a semicolon in the middle, skip insertion.\n * @param name\n * @returns {string}\n */\nexport function addColonAtLast(name) {\n    if (name.indexOf(':') === -1) {\n        if (name[name.length - 1] !== \":\") {\n            name = name + \":\"\n        }\n    }\n\n    return name;\n}\n\n/**\n * Allowed types for visibility Status modification in file explorer.\n * @type {{Pdf: string, Images: string}}\n */\nconst visibilityAssociation = {\n    Images: \"image/jpeg\",\n    Pdf: \"application/pdf\",\n};\n\n/**\n * Function to filter the list of files based on the provided visibility status.\n * @param list {$ObjMap}\n * @param filter {string} Specifies the type of files to display eg: Images, Pdf etc.\n * @param checkList {$ObjMap} Provides mimeType matches for every string visibility operation eg: Images: \"image/jpeg\"\n * @returns {$ObjMap}\n */\nexport function changeListVisibility(list, filter, checkList = visibilityAssociation) {\n    let acceptType = checkList[filter];\n    // console.log(list);\n    if (acceptType) {\n        let newList = list.filter((item) => {\n            return (item.IsDir || item.MimeType === acceptType);\n        });\n        return newList;\n    }\n    return list;\n\n}\n\n/**\n * Function to filter the list of files based on the provided search query.\n * Uses linear search for filtering the relevant files.\n * @param list\n * @param searchQuery\n * @returns {*}\n */\nexport function changeSearchFilter(list, searchQuery = \"\") {\n    searchQuery = searchQuery.toLowerCase();\n    if (searchQuery) {\n        let newList = list.filter((item) => {\n            return item.Name.toLowerCase().startsWith(searchQuery);\n        });\n        return newList;\n    }\n    return list;\n\n}\n\n/**\n * Checks whether the remoteName is local or not. Returns true if it is a remote local path, false otherwise.\n * Behaviour: if the name starts with \"/\" it is a local name.\n * @param remoteName {string} Name of the remote to check for.\n * @returns {boolean}\n */\nexport function isLocalRemoteName(remoteName) {\n    return (remoteName && remoteName !== \"\" && remoteName[0] === \"/\");\n}\n\n/**\n * Group the array items by the given key inside each object.\n *\n * @param xs{T}     array of T type\n * @param keyGetter       key to select from the T\n * @returns map{T}  map with format {key: [...objects with same key]}\n */\n\n// export function groupByKey(xs, key) {\n//     return xs.reduce(function(rv, x) {\n//         (rv[x[key]] = rv[x[key]] || []).push(x);\n//         return rv;\n//     }, {});\n// }\nexport function groupByKey(xs, keyGetter) {\n    const map = new Map();\n    xs.forEach((item) => {\n        const key = keyGetter(item);\n        const collection = map.get(key);\n        if (!collection) {\n            map.set(key, [item]);\n        } else {\n            collection.push(item);\n        }\n    });\n    return map;\n}\nexport function getSortCompareFunction(type, ascending){\n    \n    // console.log(\"Here\", a,b)\n    switch(type){\n        case \"name\":\n            return (a, b) => {\n                let x,y;\n                x = a.Name.toLowerCase();\n                y = b.Name.toLowerCase();\n                if (x < y) {return ascending ? -1 : 1;}\n                if (x > y) {return ascending ? 1 : -1;}\n                return 0;\n            }\n        case \"size\":\n            return (a, b) => {\n                let x, y;\n                x = a.Size ? a.Size : 0;\n                y = b.Size ? b.Size : 0;\n                return ascending ? ( x - y ) : ( y - x );\n            }\n            case \"modified\":\n                return (a, b) => {\n                    let x, y;\n                    x = new Date(a.ModTime);\n                    y = new Date(b.ModTime);\n                    return ascending ? (x - y) : (y - x);\n                }\n        default:\n            break;\n\n\n    }\n}\n\nexport function makeUniqueID(length) {\n    let result = '';\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n    const charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}\n"],"sourceRoot":""}